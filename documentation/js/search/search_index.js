var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiConfig.html",[0,0.39,1,1.361]],["body/interfaces/ApiConfig.html",[0,0.703,1,2.049,2,0.436,3,0.436,4,0.315,5,0.207,6,1.302,7,2.254,8,2.296,9,2.311,10,1.792,11,0.259,12,1.154,13,0.852,14,2.829,15,2.829,16,2.829,17,1.1,18,0.633,19,0.045,20,1.243,21,1.754,22,2.296,23,2.311,24,2.626,25,2.296,26,0.6,27,2.296,28,2.829,29,0.691,30,1.302,31,0.903,32,0.824,33,0.578,34,1.668,35,1.596,36,0.924,37,1.302,38,1.596,39,0.664,40,1.154,41,1.566,42,1.159,43,0.6,44,1.468,45,1.668,46,1.159,47,1.668,48,0.824,49,1.668,50,1.668,51,1.159,52,1.302,53,1.468,54,0.029,55,0.029]],["title/interfaces/AttributeDecoratorOptions.html",[0,0.39,56,1.744]],["body/interfaces/AttributeDecoratorOptions.html",[0,0.65,2,0.534,3,0.534,4,0.386,5,0.253,11,0.318,12,1.155,13,0.995,17,1.054,18,0.588,19,0.045,20,0.898,26,0.534,33,0.579,40,0.898,43,0.686,54,0.033,55,0.033,56,3.067,57,1.798,58,4.145,59,4.145,60,2.906,61,1.267,62,2.043,63,2.35,64,1.798,65,1.798,66,2.761,67,1.42,68,3.926,69,2.35,70,3.551,71,1.63,72,1.267,73,3.551,74,2.761]],["title/classes/BaseEntity.html",[31,0.599,75,0.599]],["body/classes/BaseEntity.html",[2,0.29,3,0.29,4,0.21,5,0.371,11,0.173,12,0.75,13,0.334,17,0.865,18,0.522,19,0.045,20,1.025,21,1.446,26,0.825,29,0.514,31,0.802,33,0.21,35,1.186,39,0.522,40,0.914,43,0.29,54,0.039,55,0.021,60,2.079,61,1.854,64,1.83,67,0.772,71,2.01,72,0.689,75,0.587,76,1.501,77,2.339,78,3.152,79,3.152,80,1.82,81,3.152,82,0.945,83,3.152,84,3.152,85,2.827,86,3.443,87,1.83,88,1.816,89,2.827,90,1.84,91,1.332,92,1.502,93,2.717,94,1.707,95,3.152,96,2.683,97,2.306,98,2.306,99,2.306,100,2.306,101,2.306,102,2.306,103,2.306,104,1.84,105,1.84,106,3.152,107,2.306,108,1.963,109,2.306,110,1.84,111,2.306,112,1.84,113,0.615,114,1.84,115,1.84,116,1.84,117,1.278,118,1.111,119,1.501,120,1.84,121,1.84,122,2.827,123,2.827,124,3.864,125,1.84,126,2.306,127,1.84,128,1.84,129,1.84,130,1.84,131,3.443,132,1.84,133,1.84,134,1.84,135,1.84,136,1.84]],["title/interfaces/CustomServiceConfig.html",[0,0.39,42,1.212]],["body/interfaces/CustomServiceConfig.html",[0,0.697,1,1.858,2,0.459,3,0.459,4,0.332,5,0.218,6,1.372,8,1.759,9,2.095,10,1.372,11,0.273,12,1.186,14,1.759,15,1.759,16,1.759,17,1.071,18,0.647,19,0.045,20,1.046,21,1.476,22,1.759,23,2.095,24,2.381,25,1.759,26,0.459,27,1.759,28,2.381,29,0.717,30,1.372,31,1.039,32,0.868,33,0.588,34,1.759,35,1.654,36,0.974,37,1.372,38,1.654,39,0.725,40,1.186,41,1.763,42,1.654,43,0.789,44,1.548,45,1.759,46,1.222,47,1.759,48,0.868,49,1.759,50,1.759,51,1.222,52,1.372,53,1.548,54,0.03,55,0.03]],["title/injectables/DataContext.html",[48,0.861,137,0.68]],["body/injectables/DataContext.html",[2,0.399,3,0.399,4,0.288,5,0.338,11,0.237,12,0.949,13,0.459,17,0.525,18,0.483,19,0.045,26,0.399,29,0.819,31,0.935,33,0.288,35,2.071,36,1.733,37,1.191,39,0.701,40,1.1,42,1.5,43,0.399,46,1.5,48,1.066,54,0.027,55,0.027,61,1.552,67,1.891,69,2.482,71,1.78,75,0.525,82,1.195,87,1.343,88,1.552,96,2.482,113,0.845,137,0.976,138,2.062,139,4.508,140,2.528,141,2.124,142,3.575,143,3.575,144,2.528,145,1.061,146,0.946,147,2.062,148,1.526,149,1.755,150,2.528,151,2.528,152,2.528,153,3.575,154,2.528,155,2.528,156,4.147,157,4.147,158,4.508,159,3.575,160,3.575,161,2.528,162,2.528,163,2.528,164,2.528,165,2.528]],["title/injectables/DataServiceFactory.html",[137,0.68,141,1.361]],["body/injectables/DataServiceFactory.html",[2,0.383,3,0.383,4,0.277,5,0.332,11,0.228,13,0.737,18,0.548,19,0.045,26,0.698,29,0.975,30,1.145,31,0.919,32,0.725,33,0.277,36,1.793,38,1.019,39,0.598,41,1.48,43,0.64,51,1.019,52,1.145,54,0.026,55,0.026,71,1.301,72,1.519,75,0.504,77,2.353,82,1.162,87,1.847,88,1.519,91,1.145,113,1.356,137,0.955,141,1.637,145,1.019,146,1.519,148,1.467,149,1.687,166,3.612,167,1.982,168,1.912,169,3.476,170,2.43,171,4.428,172,4.057,173,3.612,174,3.31,175,3.612,176,4.057,177,3.612,178,2.43,179,3.476,180,2.817,181,1.291,182,2.43,183,3.476,184,2.43,185,1.687,186,1.687,187,1.687,188,1.637,189,2.835,190,1.467,191,1.702,192,1.467,193,1.637,194,2.43,195,2.43,196,4.057,197,2.43,198,2.43,199,2.43,200,4.428,201,2.43,202,2.43,203,2.43,204,2.43,205,2.43,206,2.43]],["title/interfaces/DataSource.html",[0,0.39,36,0.965]],["body/interfaces/DataSource.html",[0,0.687,1,2.212,2,0.438,3,0.438,4,0.316,5,0.208,6,1.308,8,1.676,9,2.028,10,1.308,11,0.261,12,1.157,13,0.924,14,1.676,15,1.676,16,1.676,17,0.974,18,0.717,19,0.045,20,1.013,21,1.429,22,1.676,23,2.028,24,2.304,25,1.676,26,0.438,27,1.676,28,2.304,29,0.694,30,1.308,31,0.905,32,0.828,33,0.579,34,1.676,35,1.601,36,1.276,37,2.212,38,1.97,39,0.717,40,1.429,41,1.741,42,1.165,43,0.602,44,1.476,45,1.676,46,1.165,47,1.676,48,0.828,49,1.676,50,1.676,51,1.165,52,1.308,53,1.476,54,0.029,55,0.029]],["title/interfaces/EntityAttribute.html",[0,0.39,64,1.535]],["body/interfaces/EntityAttribute.html",[0,0.654,2,0.54,3,0.54,4,0.39,5,0.257,11,0.322,12,1.164,13,0.981,17,1.059,18,0.593,19,0.045,20,0.909,26,0.54,33,0.581,40,0.909,43,0.832,54,0.033,55,0.033,56,3.185,57,1.82,58,2.794,59,2.794,60,2.068,61,1.282,62,2.068,63,2.379,64,2.331,65,1.82,66,2.794,67,1.437,68,3.948,69,2.379,70,3.579,71,1.642,72,1.282,73,3.579,74,2.794]],["title/interfaces/EntityServiceConfig.html",[0,0.39,46,1.212]],["body/interfaces/EntityServiceConfig.html",[0,0.692,1,1.826,2,0.448,3,0.448,4,0.323,5,0.213,6,1.338,7,2.316,8,1.714,9,2.344,10,1.338,11,0.267,12,1.258,13,0.704,14,1.714,15,1.714,16,1.714,17,1.062,18,0.596,19,0.045,20,1.028,21,1.451,22,1.714,23,2.344,24,2.34,25,1.714,26,0.448,27,1.714,28,2.34,29,0.704,30,1.338,31,1.029,32,0.847,33,0.583,34,1.714,35,1.626,36,0.949,37,1.338,38,1.626,39,0.739,40,1.171,41,1.711,42,1.191,43,0.782,44,2.059,45,2.34,46,1.626,47,2.34,48,1.155,49,2.34,50,1.714,51,1.191,52,1.338,53,1.509,54,0.029,55,0.029]],["title/classes/FirebaseEntity.html",[75,0.599,191,1.212]],["body/classes/FirebaseEntity.html",[2,0.381,3,0.381,4,0.275,5,0.303,11,0.227,12,0.918,13,0.439,17,1.009,18,0.632,19,0.045,20,1.073,21,1.295,26,0.79,29,0.439,31,1.112,32,0.72,33,0.275,35,1.013,39,0.468,40,0.918,43,0.767,54,0.037,55,0.026,60,1.458,61,1.653,67,1.013,71,1.75,75,0.718,77,2.661,78,3.298,79,3.298,80,2.08,81,3.298,82,1.156,83,3.298,84,3.298,88,1.952,91,1.63,92,1.838,93,2.584,94,1.458,95,2.822,96,2.402,97,1.97,98,1.97,99,1.97,100,1.97,101,1.97,102,1.97,103,1.97,106,2.822,107,1.97,108,1.677,109,1.97,111,1.97,113,0.807,126,1.97,191,1.451,207,3.298,208,1.97,209,3.46,210,4.415,211,2.415,212,5.008,213,2.415,214,2.415,215,2.415,216,2.415,217,2.415,218,2.415,219,2.415,220,2.415,221,2.415]],["title/injectables/FirebaseRepository.html",[137,0.68,188,1.361]],["body/injectables/FirebaseRepository.html",[2,0.233,3,0.233,4,0.169,5,0.378,11,0.139,12,0.632,13,0.729,17,0.621,18,0.628,19,0.045,21,1.283,26,0.832,29,0.798,32,0.441,33,0.169,39,0.642,40,1.065,43,0.633,54,0.038,55,0.018,61,1.741,67,1.684,71,0.892,72,0.892,75,0.307,77,2.407,80,1.123,82,0.796,87,1.266,88,1.867,91,1.123,92,1.266,93,1.996,94,1.439,113,1.341,117,1.028,118,0.894,137,0.704,145,0.621,146,0.892,168,1.123,173,3.442,174,2.796,175,2.796,180,1.655,181,1.266,185,1.028,186,1.028,188,1.123,190,0.894,191,2.118,192,0.894,222,4.119,223,0.894,224,4.53,225,2.439,226,2.796,227,2.796,228,3.427,229,3.427,230,2.069,231,2.069,232,1.439,233,1.439,234,2.383,235,1.439,236,1.208,237,2.383,238,1.481,239,2.869,240,1.481,241,1.208,242,1.439,243,1.481,244,1.439,245,1.481,246,2.069,247,2.383,248,1.481,249,1.439,250,1.208,251,1.208,252,1.481,253,1.944,254,2.796,255,3.047,256,1.944,257,1.944,258,1.481,259,1.944,260,1.481,261,3.427,262,1.208,263,2.99,264,0.787,265,1.028,266,1.208,267,1.655,268,1.481,269,1.481,270,3.427,271,1.481,272,1.481,273,1.481,274,1.944,275,1.208,276,1.481,277,1.481,278,1.028,279,1.028,280,1.944,281,1.481,282,1.481,283,1.481,284,1.944,285,1.481,286,1.481,287,1.481,288,2.383,289,1.481,290,1.944,291,1.208,292,1.481,293,1.481,294,1.481,295,1.481,296,1.481,297,2.383,298,1.481,299,1.481,300,1.481]],["title/injectables/FirestoreRepository.html",[137,0.68,193,1.361]],["body/injectables/FirestoreRepository.html",[2,0.274,3,0.274,4,0.198,5,0.378,11,0.163,12,0.717,13,0.738,17,0.892,18,0.606,19,0.045,21,1.402,26,0.831,29,0.816,32,0.517,33,0.198,39,0.659,40,1.141,43,0.64,54,0.039,55,0.021,61,1.68,67,1.803,72,0.65,75,0.36,77,2.385,80,0.818,82,0.903,87,1.436,88,1.859,91,1.273,92,1.436,93,1.99,94,1.631,113,1.357,117,1.205,118,1.048,137,0.781,145,0.728,146,1.012,168,1.273,177,3.055,181,1.436,187,1.205,190,1.048,191,2.192,192,1.048,193,1.273,223,1.048,225,2.707,226,3.055,227,3.055,230,2.261,231,2.261,232,1.631,233,1.631,235,1.631,236,1.416,239,2.878,241,1.416,242,1.631,244,1.631,246,2.261,249,1.631,250,1.416,251,1.416,253,2.204,254,3.055,255,3.223,256,2.204,257,2.204,259,2.204,264,0.922,265,1.205,266,1.416,267,1.876,274,2.204,275,1.416,278,1.205,279,1.205,280,1.416,284,1.416,290,1.416,291,1.416,301,4.114,302,3.745,303,3.318,304,2.702,305,1.735,306,1.735,307,1.735,308,1.735,309,1.735,310,1.735,311,1.735,312,1.735,313,1.735,314,3.318,315,1.735,316,1.735,317,1.735,318,1.735,319,1.735,320,1.735,321,1.735,322,1.735,323,1.735]],["title/modules/NgxDataContextModule.html",[324,1.361,325,1.744]],["body/modules/NgxDataContextModule.html",[2,0.448,3,0.448,4,0.323,5,0.213,19,0.045,20,0.753,26,0.448,29,0.994,30,1.338,31,0.589,32,0.847,33,0.629,36,0.949,38,1.191,39,0.524,41,1.475,48,1.315,54,0.029,55,0.029,61,1.063,75,0.589,119,2.316,141,2.078,145,1.191,147,3.161,148,1.714,149,1.972,186,1.972,187,1.972,188,2.078,189,3.866,191,1.191,192,1.714,193,2.078,324,1.338,325,2.663,326,1.972,327,1.972,328,3.875,329,2.316,330,3.875,331,3.875,332,3.599,333,3.875,334,3.875,335,3.875,336,3.875,337,3.875,338,3.875,339,2.84,340,2.84,341,1.972,342,2.84,343,2.316,344,2.316]],["title/interfaces/Repository.html",[0,0.39,146,1.081]],["body/interfaces/Repository.html",[0,0.546,2,0.477,3,0.477,4,0.344,5,0.399,11,0.284,13,0.884,17,0.945,18,0.657,19,0.044,26,0.822,29,0.735,31,0.627,32,0.901,33,0.344,39,0.615,43,0.767,54,0.031,55,0.031,80,1.424,82,1.351,88,1.952,113,1.625,146,1.513,168,1.904,181,2.148,230,2.935,231,2.935,232,2.44,233,2.44,235,2.44,239,3.308,242,2.44,244,2.44,246,2.935,249,2.44,255,3.805,264,1.606,345,2.465,346,3.022,347,3.022,348,3.022,349,3.022,350,3.022,351,3.022]],["title/injectables/RestApiRepositoryService.html",[137,0.68,352,2.006]],["body/injectables/RestApiRepositoryService.html",[2,0.408,3,0.408,4,0.295,5,0.383,10,2.407,11,0.243,13,0.827,17,0.871,18,0.615,19,0.045,26,0.784,29,0.827,31,1.114,33,0.295,39,0.567,43,0.718,54,0.028,55,0.028,72,1.862,75,0.537,80,1.218,82,1.214,88,1.862,113,1.522,137,0.988,145,1.085,146,1.36,148,1.561,168,1.711,181,1.93,190,1.561,223,1.561,230,2.749,231,2.749,232,2.193,233,2.193,235,2.193,239,3.2,242,2.193,244,2.193,246,2.749,249,2.193,262,2.11,264,1.374,267,3.547,278,3.454,279,3.454,352,2.522,353,4.167,354,2.586,355,2.586,356,2.586,357,2.586,358,2.586]],["title/coverage.html",[359,3.198]],["body/coverage.html",[0,0.709,1,1.341,4,0.324,5,0.431,6,2.235,10,1.341,18,0.385,19,0.044,20,0.755,31,0.591,36,0.952,39,0.385,41,0.952,42,1.194,46,1.194,48,0.849,54,0.029,55,0.029,56,1.719,57,2.521,62,1.719,64,1.513,65,2.347,72,1.066,75,0.806,76,2.322,137,1.168,138,2.322,141,1.341,146,1.066,166,2.322,167,2.322,188,1.341,191,1.194,193,1.341,207,2.322,208,2.322,222,2.322,223,2.667,301,2.322,326,1.977,327,1.977,345,2.322,352,1.977,353,2.322,359,2.322,360,2.847,361,2.847,362,2.847,363,5.716,364,3.882,365,4.965,366,2.696,367,2.322,368,2.322,369,2.322,370,2.322,371,2.847,372,2.847,373,4.417,374,2.847,375,2.847,376,2.847,377,2.847,378,2.847,379,3.882,380,2.847,381,2.847,382,2.847,383,2.847]],["title/dependencies.html",[384,2.423,385,2.094]],["body/dependencies.html",[19,0.045,51,1.411,54,0.033,55,0.033,118,2.031,145,1.411,185,2.336,264,1.788,329,2.744,385,2.031,386,3.364,387,5.68,388,3.364,389,3.364,390,3.364,391,4.337,392,4.337,393,3.364,394,3.364,395,3.364,396,3.364,397,3.364,398,3.364,399,3.011,400,3.364,401,3.364,402,3.364,403,3.364,404,3.364,405,3.364,406,3.364,407,3.364,408,3.364,409,3.364,410,3.364,411,2.744,412,3.364,413,3.364,414,3.364,415,3.364,416,3.364,417,3.364,418,3.364,419,3.364,420,3.364,421,3.364,422,3.364,423,2.744,424,3.364,425,3.364,426,3.364,427,3.364,428,3.364]],["title/miscellaneous/enumerations.html",[429,1.141,430,2.829]],["body/miscellaneous/enumerations.html",[5,0.328,6,2.065,11,0.411,19,0.039,38,2.14,51,1.839,52,2.065,53,2.329,54,0.039,55,0.039,429,2.065,430,3.575,431,4.382]],["title/miscellaneous/functions.html",[65,1.843,429,1.141]],["body/miscellaneous/functions.html",[5,0.385,11,0.367,13,0.973,19,0.042,20,1.265,39,0.695,43,0.844,54,0.036,55,0.036,57,2.079,65,2.079,71,1.925,113,1.718,180,2.716,367,3.191,368,3.888,369,3.888,370,3.191,429,1.843,432,3.191,433,3.912,434,3.912,435,3.912,436,3.912,437,3.912]],["title/index.html",[11,0.227,438,2.423,439,2.423]],["body/index.html",[4,0.312,9,1.458,19,0.044,23,1.458,29,0.962,33,0.431,37,1.292,39,0.371,41,1.265,44,1.458,48,1.577,54,0.029,55,0.029,75,0.785,82,0.917,93,2.011,168,1.292,265,2.628,324,2.309,325,3.059,332,3.087,341,2.628,343,2.238,385,2.285,399,1.905,411,3.087,423,4.316,440,2.743,441,4.332,442,4.332,443,2.743,444,2.743,445,2.743,446,2.743,447,2.743,448,2.743,449,2.743,450,2.238,451,2.743,452,2.743,453,2.743,454,4.9,455,2.743,456,3.784,457,3.784,458,2.743,459,2.743,460,4.332,461,2.743,462,2.743,463,2.743,464,2.743,465,2.743,466,3.784,467,2.743,468,2.743,469,2.743,470,2.743,471,2.743,472,2.743,473,2.743,474,2.743,475,2.743,476,2.743,477,2.743,478,2.743,479,2.743,480,2.743,481,2.743,482,2.743,483,2.743,484,2.743,485,2.743,486,2.743,487,2.743,488,2.743,489,2.743,490,2.743,491,3.784,492,2.743,493,2.743,494,2.743,495,2.743,496,2.743,497,2.743,498,4.332,499,2.743,500,2.743,501,2.743,502,2.743,503,2.743,504,2.743,505,3.784]],["title/modules.html",[324,1.847]],["body/modules.html",[19,0.039,54,0.039,55,0.039,324,2.114,325,2.709,506,4.487,507,4.487,508,4.487]],["title/overview.html",[509,3.198]],["body/overview.html",[0,0.572,19,0.038,33,0.482,54,0.038,55,0.038,75,0.879,108,2.941,137,0.996,324,2.355,341,2.941,344,3.454,385,2.557,399,2.941,450,3.454,509,3.454,510,4.235,511,4.999,512,4.235,513,4.235,514,4.235,515,4.235]],["title/miscellaneous/variables.html",[366,2.408,429,1.141]],["body/miscellaneous/variables.html",[5,0.363,11,0.378,18,0.544,19,0.044,41,1.74,48,1.2,54,0.037,55,0.037,57,2.138,62,3.142,63,2.794,91,2.284,92,2.576,141,1.896,188,1.896,193,1.896,326,2.794,327,3.367,366,2.794,429,1.896,432,3.282,516,4.023]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":108,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{},"overview.html":{}}}],["1.1.5",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["1.4.9",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":450,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":453,"title":{},"body":{"index.html":{}}}],["2.1.1",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":501,"title":{},"body":{"index.html":{}}}],["3.2.0",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":514,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["5.5.5",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":515,"title":{},"body":{"overview.html":{}}}],["_",{"_index":117,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["_.clonedeep(this.ent",{"_index":254,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["_.isempty(ent",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["abov",{"_index":455,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{}}}],["action",{"_index":447,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":462,"title":{},"body":{"index.html":{}}}],["af",{"_index":303,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["alfredo",{"_index":502,"title":{},"body":{"index.html":{}}}],["angular",{"_index":441,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":329,"title":{},"body":{"modules/NgxDataContextModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":30,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"modules/NgxDataContextModule.html":{}}}],["angular/compil",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":145,"title":{},"body":{"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"injectables/RestApiRepositoryService.html":{},"dependencies.html":{}}}],["angular/fir",{"_index":185,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"dependencies.html":{}}}],["angular/fire/databas",{"_index":186,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"modules/NgxDataContextModule.html":{}}}],["angular/fire/firestor",{"_index":187,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{}}}],["angular/form",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["angularfir",{"_index":224,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["angularfire.list(`${this.entity.entitynam",{"_index":269,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["angularfiredatabas",{"_index":173,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{}}}],["angularfiredatabasemodul",{"_index":333,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["angularfirelist",{"_index":261,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["angularfirestor",{"_index":177,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirestoreRepository.html":{}}}],["angularfirestoremodul",{"_index":334,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["any).$$nam",{"_index":121,"title":{},"body":{"classes/BaseEntity.html":{}}}],["any)['$$nam",{"_index":156,"title":{},"body":{"injectables/DataContext.html":{}}}],["any)[attr.nam",{"_index":124,"title":{},"body":{"classes/BaseEntity.html":{}}}],["any)[config.nam",{"_index":164,"title":{},"body":{"injectables/DataContext.html":{}}}],["any)[target",{"_index":159,"title":{},"body":{"injectables/DataContext.html":{}}}],["api",{"_index":10,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{}}}],["apiconfig",{"_index":1,"title":{"interfaces/ApiConfig.html":{}},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"coverage.html":{}}}],["appcompon",{"_index":491,"title":{},"body":{"index.html":{}}}],["applic",{"_index":442,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":493,"title":{},"body":{"index.html":{}}}],["array",{"_index":40,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["array.isarray(data",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["array.isarray(datasource.ent",{"_index":154,"title":{},"body":{"injectables/DataContext.html":{}}}],["array.isarray(datasource.servic",{"_index":162,"title":{},"body":{"injectables/DataContext.html":{}}}],["attr.opt",{"_index":128,"title":{},"body":{"classes/BaseEntity.html":{}}}],["attr.options.isent",{"_index":133,"title":{},"body":{"classes/BaseEntity.html":{}}}],["attr.options.serializednam",{"_index":129,"title":{},"body":{"classes/BaseEntity.html":{}}}],["attribut",{"_index":20,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["attribute(opt",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["attribute_metadata",{"_index":62,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["attributedecoratoropt",{"_index":56,"title":{"interfaces/AttributeDecoratorOptions.html":{}},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{},"coverage.html":{}}}],["attributekey",{"_index":68,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{}}}],["avail",{"_index":507,"title":{},"body":{"modules.html":{}}}],["awesom",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["baseent",{"_index":31,"title":{"classes/BaseEntity.html":{}},"body":{"interfaces/ApiConfig.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{}}}],["baseentity:14",{"_index":220,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["baseentity:25",{"_index":219,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["baseentity:53",{"_index":214,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["baseentity:6",{"_index":213,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["baseentity:7",{"_index":215,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["baseentity:74",{"_index":217,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["baseentity:8",{"_index":216,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["boolean",{"_index":60,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/EntityAttribute.html":{},"classes/FirebaseEntity.html":{}}}],["bootstrap",{"_index":399,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["break",{"_index":200,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["brows",{"_index":508,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["bundl",{"_index":465,"title":{},"body":{"index.html":{}}}],["c",{"_index":500,"title":{},"body":{"index.html":{}}}],["call",{"_index":25,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["case",{"_index":196,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["certain",{"_index":27,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["class",{"_index":75,"title":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["code",{"_index":488,"title":{},"body":{"index.html":{}}}],["collect",{"_index":21,"title":{},"body":{"interfaces/ApiConfig.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["collection.push(deseri",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["collection.push(target",{"_index":257,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["collectionattribut",{"_index":14,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["collectionnam",{"_index":302,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["commitpleas",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["commonmodul",{"_index":328,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["compodoc/compodoc",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":37,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"index.html":{}}}],["configur",{"_index":9,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"index.html":{}}}],["const",{"_index":61,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"interfaces/EntityAttribute.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["constructor(ent",{"_index":236,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["constructor(http",{"_index":170,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["constructor(priv",{"_index":150,"title":{},"body":{"injectables/DataContext.html":{}}}],["constructor(servicefactori",{"_index":140,"title":{},"body":{"injectables/DataContext.html":{}}}],["context",{"_index":440,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":499,"title":{},"body":{"index.html":{}}}],["core",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":359,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":168,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"index.html":{}}}],["create(ent",{"_index":181,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["createcustom",{"_index":169,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["createcustom(datasourc",{"_index":183,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["current",{"_index":49,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["customserviceconfig",{"_index":42,"title":{"interfaces/CustomServiceConfig.html":{}},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"coverage.html":{}}}],["d",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["data",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"index.html":{}}}],["data.foreach((item",{"_index":253,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["data[d",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["datacontext",{"_index":48,"title":{"injectables/DataContext.html":{}},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["datacontext';th",{"_index":476,"title":{},"body":{"index.html":{}}}],["datacontext.module.t",{"_index":327,"title":{},"body":{"modules/NgxDataContextModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datacontext.umd.j",{"_index":473,"title":{},"body":{"index.html":{}}}],["datacontext/bundles/ngx",{"_index":472,"title":{},"body":{"index.html":{}}}],["datacontext/src/lib/decorators/attribute.decorator.t",{"_index":57,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["datacontext/src/lib/decorators/ent",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["datacontext/src/lib/decorators/entity.decorator.t",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["datacontext/src/lib/models/datasource.model.t",{"_index":6,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["datacontext/src/lib/models/entity.model.t",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["datacontext/src/lib/models/entity.model.ts:14",{"_index":114,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/entity.model.ts:25",{"_index":112,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/entity.model.ts:49",{"_index":116,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/entity.model.ts:53",{"_index":104,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/entity.model.ts:6",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/entity.model.ts:7",{"_index":105,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/entity.model.ts:74",{"_index":110,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/entity.model.ts:8",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{}}}],["datacontext/src/lib/models/firebas",{"_index":207,"title":{},"body":{"classes/FirebaseEntity.html":{},"coverage.html":{}}}],["datacontext/src/lib/models/repository.model.t",{"_index":345,"title":{},"body":{"interfaces/Repository.html":{},"coverage.html":{}}}],["datacontext/src/lib/models/repository.model.ts:10",{"_index":347,"title":{},"body":{"interfaces/Repository.html":{}}}],["datacontext/src/lib/models/repository.model.ts:12",{"_index":346,"title":{},"body":{"interfaces/Repository.html":{}}}],["datacontext/src/lib/models/repository.model.ts:14",{"_index":350,"title":{},"body":{"interfaces/Repository.html":{}}}],["datacontext/src/lib/models/repository.model.ts:16",{"_index":351,"title":{},"body":{"interfaces/Repository.html":{}}}],["datacontext/src/lib/models/repository.model.ts:6",{"_index":349,"title":{},"body":{"interfaces/Repository.html":{}}}],["datacontext/src/lib/models/repository.model.ts:8",{"_index":348,"title":{},"body":{"interfaces/Repository.html":{}}}],["datacontext/src/lib/ngx",{"_index":326,"title":{},"body":{"modules/NgxDataContextModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datacontext/src/lib/services/datacontext.service.t",{"_index":138,"title":{},"body":{"injectables/DataContext.html":{},"coverage.html":{}}}],["datacontext/src/lib/services/datacontext.service.ts:13",{"_index":144,"title":{},"body":{"injectables/DataContext.html":{}}}],["datacontext/src/lib/services/datacontext.service.ts:9",{"_index":142,"title":{},"body":{"injectables/DataContext.html":{}}}],["datacontext/src/lib/services/firebas",{"_index":222,"title":{},"body":{"injectables/FirebaseRepository.html":{},"coverage.html":{}}}],["datacontext/src/lib/services/firestor",{"_index":301,"title":{},"body":{"injectables/FirestoreRepository.html":{},"coverage.html":{}}}],["datacontext/src/lib/services/repositori",{"_index":166,"title":{},"body":{"injectables/DataServiceFactory.html":{},"coverage.html":{}}}],["datacontext/src/lib/services/rest",{"_index":353,"title":{},"body":{"injectables/RestApiRepositoryService.html":{},"coverage.html":{}}}],["dataservicefactori",{"_index":141,"title":{"injectables/DataServiceFactory.html":{}},"body":{"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasourc",{"_index":36,"title":{"interfaces/DataSource.html":{}},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{}}}],["datasource.apiconfig",{"_index":205,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["datasource.ent",{"_index":153,"title":{},"body":{"injectables/DataContext.html":{}}}],["datasource.servic",{"_index":161,"title":{},"body":{"injectables/DataContext.html":{}}}],["datasource.service(datasource.ent",{"_index":204,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["datasource.services.foreach",{"_index":163,"title":{},"body":{"injectables/DataContext.html":{}}}],["datasource.typ",{"_index":195,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["datasourcetyp",{"_index":38,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"modules/NgxDataContextModule.html":{},"miscellaneous/enumerations.html":{}}}],["datasourcetype.firebas",{"_index":197,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["datasourcetype.firestor",{"_index":202,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["datasourcetype.rest",{"_index":201,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["datatosav",{"_index":287,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["datatosave[`${entity.entityname}/${newkey",{"_index":292,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["date(targetvalu",{"_index":136,"title":{},"body":{"classes/BaseEntity.html":{}}}],["declar",{"_index":341,"title":{},"body":{"modules/NgxDataContextModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":339,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["decorators/attribute.decor",{"_index":119,"title":{},"body":{"classes/BaseEntity.html":{},"modules/NgxDataContextModule.html":{}}}],["decorators/entity.decor",{"_index":340,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["default",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/DataServiceFactory.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["delet",{"_index":319,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["demo",{"_index":444,"title":{},"body":{"index.html":{}}}],["depend",{"_index":385,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":7,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/EntityServiceConfig.html":{}}}],["deseri",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["deserialize(target",{"_index":111,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["deserializeent",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["differ",{"_index":482,"title":{},"body":{"index.html":{}}}],["direct",{"_index":446,"title":{},"body":{"index.html":{}}}],["doc(entity.id",{"_index":318,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["doc(entity.id).set(ent",{"_index":321,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["doc(entitytosave.id",{"_index":316,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["document",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["dynam",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["easili",{"_index":443,"title":{},"body":{"index.html":{}}}],["end",{"_index":486,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":39,"title":{},"body":{"interfaces/ApiConfig.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["entity(nam",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.deseri",{"_index":102,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["entity.deserialize(data",{"_index":103,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["entity.deserialize(item",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["entity.entitynam",{"_index":312,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["entity.model",{"_index":32,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{}}}],["entity.model.t",{"_index":208,"title":{},"body":{"classes/FirebaseEntity.html":{},"coverage.html":{}}}],["entity.model.ts:4",{"_index":211,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["entity.model.ts:6",{"_index":218,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["entity.seri",{"_index":284,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["entityattribut",{"_index":64,"title":{"interfaces/EntityAttribute.html":{}},"body":{"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/EntityAttribute.html":{},"coverage.html":{}}}],["entitynam",{"_index":79,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["entityproperti",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityproperty(ent",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entityserviceconfig",{"_index":46,"title":{"interfaces/EntityServiceConfig.html":{}},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"coverage.html":{}}}],["entitytosav",{"_index":290,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["entitytosave.id",{"_index":291,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["enum",{"_index":50,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["enumer",{"_index":430,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":298,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["error('method",{"_index":279,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["exact",{"_index":480,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":34,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":209,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["factory.servic",{"_index":147,"title":{},"body":{"injectables/DataContext.html":{},"modules/NgxDataContextModule.html":{}}}],["factory.service.t",{"_index":167,"title":{},"body":{"injectables/DataServiceFactory.html":{},"coverage.html":{}}}],["factory.service.ts:14",{"_index":178,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["factory.service.ts:22",{"_index":182,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["factory.service.ts:50",{"_index":184,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["faker",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["fb",{"_index":174,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{}}}],["fb.database().ref",{"_index":272,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["fbdb",{"_index":172,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["fbstore",{"_index":176,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["field",{"_index":106,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["field.indexof('z",{"_index":107,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":230,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["firebas",{"_index":51,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["firebaseapp",{"_index":175,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{}}}],["firebaseent",{"_index":191,"title":{"classes/FirebaseEntity.html":{}},"body":{"injectables/DataServiceFactory.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{}}}],["firebaserepositori",{"_index":188,"title":{"injectables/FirebaseRepository.html":{}},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestor",{"_index":52,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"miscellaneous/enumerations.html":{}}}],["firestorerepositori",{"_index":193,"title":{"injectables/FirestoreRepository.html":{}},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["font",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["forroot",{"_index":343,"title":{},"body":{"modules/NgxDataContextModule.html":{},"index.html":{}}}],["function",{"_index":65,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["get",{"_index":438,"title":{"index.html":{}},"body":{}}],["getal",{"_index":231,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["getbyid",{"_index":232,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["getbyid(id",{"_index":242,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["getisnew",{"_index":115,"title":{},"body":{"classes/BaseEntity.html":{}}}],["graph",{"_index":506,"title":{},"body":{"modules.html":{}}}],["handlecollectionrespons",{"_index":226,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["handleentityrespons",{"_index":227,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["header",{"_index":15,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["higher",{"_index":451,"title":{},"body":{"index.html":{}}}],["highlightj",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":179,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["httpclient",{"_index":171,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["httpclientmodul",{"_index":330,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["httpheader",{"_index":28,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["https://alfredoperez.github.io/ngx",{"_index":448,"title":{},"body":{"index.html":{}}}],["id",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["identifi",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":267,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["import",{"_index":29,"title":{},"body":{"interfaces/ApiConfig.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"index.html":{}}}],["includ",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["inherit",{"_index":212,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["initi",{"_index":139,"title":{},"body":{"injectables/DataContext.html":{}}}],["inject",{"_index":137,"title":{"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{}},"body":{"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"overview.html":{}}}],["instal",{"_index":454,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":155,"title":{},"body":{"injectables/DataContext.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"interfaces/Repository.html":{}},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"interfaces/Repository.html":{},"coverage.html":{},"overview.html":{}}}],["isdat",{"_index":81,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["isent",{"_index":58,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{}}}],["isnan(date.parse(field",{"_index":109,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["isnew",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{}}}],["item",{"_index":35,"title":{},"body":{"interfaces/ApiConfig.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{}}}],["item.ent",{"_index":157,"title":{},"body":{"injectables/DataContext.html":{}}}],["item.nam",{"_index":158,"title":{},"body":{"injectables/DataContext.html":{}}}],["itemsref",{"_index":228,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["js",{"_index":411,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["keep",{"_index":285,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["legend",{"_index":510,"title":{},"body":{"overview.html":{}}}],["level",{"_index":485,"title":{},"body":{"index.html":{}}}],["libs/.../attribute.decorator.t",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../datasource.model.t",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../ent",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../entity.decorator.t",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":5,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["licens",{"_index":498,"title":{},"body":{"index.html":{}}}],["link",{"_index":44,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"index.html":{}}}],["list",{"_index":479,"title":{},"body":{"index.html":{}}}],["list(entity.entitynam",{"_index":282,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["list(this.entity.entitynam",{"_index":276,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["loader",{"_index":469,"title":{},"body":{"index.html":{}}}],["locat",{"_index":22,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["lodash",{"_index":118,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"dependencies.html":{}}}],["look",{"_index":470,"title":{},"body":{"index.html":{}}}],["main",{"_index":475,"title":{},"body":{"index.html":{}}}],["map",{"_index":265,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"index.html":{}}}],["match",{"_index":55,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["merg",{"_index":322,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["method",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"index.html":{}}}],["miscellan",{"_index":429,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":505,"title":{},"body":{"index.html":{}}}],["models/datasource.model",{"_index":149,"title":{},"body":{"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"modules/NgxDataContextModule.html":{}}}],["models/entity.model",{"_index":148,"title":{},"body":{"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"modules/NgxDataContextModule.html":{},"injectables/RestApiRepositoryService.html":{}}}],["models/firebas",{"_index":192,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{}}}],["models/repository.model",{"_index":190,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["modul",{"_index":324,"title":{"modules/NgxDataContextModule.html":{},"modules.html":{}},"body":{"modules/NgxDataContextModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":331,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["name",{"_index":43,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":466,"title":{},"body":{"index.html":{}}}],["new",{"_index":72,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"injectables/DataServiceFactory.html":{},"interfaces/EntityAttribute.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{}}}],["newkey",{"_index":288,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["ng",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["ngmodul",{"_index":332,"title":{},"body":{"modules/NgxDataContextModule.html":{},"index.html":{}}}],["ngrx/effect",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":423,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxdatacontextmodul",{"_index":325,"title":{"modules/NgxDataContextModule.html":{}},"body":{"modules/NgxDataContextModule.html":{},"index.html":{},"modules.html":{}}}],["ngxdatacontextmodule.forroot",{"_index":492,"title":{},"body":{"index.html":{}}}],["node_modules/ngx",{"_index":471,"title":{},"body":{"index.html":{}}}],["note:if",{"_index":461,"title":{},"body":{"index.html":{}}}],["notic",{"_index":490,"title":{},"body":{"index.html":{}}}],["now",{"_index":458,"title":{},"body":{"index.html":{}}}],["npm",{"_index":457,"title":{},"body":{"index.html":{}}}],["nrwl/nx",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["object(`${this.entity.entityname}/${id",{"_index":273,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["observ",{"_index":239,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["onc",{"_index":474,"title":{},"body":{"index.html":{}}}],["option",{"_index":13,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"miscellaneous/functions.html":{}}}],["options.serializednam",{"_index":73,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{}}}],["othercompon",{"_index":495,"title":{},"body":{"index.html":{}}}],["othermodul",{"_index":496,"title":{},"body":{"index.html":{}}}],["out",{"_index":513,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":509,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":384,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":113,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":478,"title":{},"body":{"index.html":{}}}],["perez",{"_index":503,"title":{},"body":{"index.html":{}}}],["pipe(map(this.handlecollectionrespons",{"_index":277,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["pipe(map(this.handleentityrespons",{"_index":275,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["point",{"_index":463,"title":{},"body":{"index.html":{}}}],["privat",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/DataServiceFactory.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["promis",{"_index":246,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["promise.resolve(undefin",{"_index":280,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["properti",{"_index":12,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["property.decorator.t",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["propertydecor",{"_index":66,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{}}}],["provid",{"_index":344,"title":{},"body":{"modules/NgxDataContextModule.html":{},"overview.html":{}}}],["public",{"_index":225,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["remain",{"_index":477,"title":{},"body":{"index.html":{}}}],["remov",{"_index":233,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["remove(ent",{"_index":244,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["renam",{"_index":47,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["repositori",{"_index":146,"title":{"interfaces/Repository.html":{}},"body":{"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{}}}],["repository.servic",{"_index":189,"title":{},"body":{"injectables/DataServiceFactory.html":{},"modules/NgxDataContextModule.html":{}}}],["repository.service.t",{"_index":223,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:10",{"_index":356,"title":{},"body":{"injectables/RestApiRepositoryService.html":{}}}],["repository.service.ts:103",{"_index":258,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:12",{"_index":304,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:13",{"_index":262,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["repository.service.ts:14",{"_index":251,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:15",{"_index":237,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:16",{"_index":355,"title":{},"body":{"injectables/RestApiRepositoryService.html":{}}}],["repository.service.ts:18",{"_index":252,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:19",{"_index":354,"title":{},"body":{"injectables/RestApiRepositoryService.html":{}}}],["repository.service.ts:20",{"_index":307,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:22",{"_index":357,"title":{},"body":{"injectables/RestApiRepositoryService.html":{}}}],["repository.service.ts:25",{"_index":358,"title":{},"body":{"injectables/RestApiRepositoryService.html":{}}}],["repository.service.ts:27",{"_index":306,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:30",{"_index":243,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:33",{"_index":305,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:37",{"_index":241,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:44",{"_index":240,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:46",{"_index":308,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:48",{"_index":245,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:54",{"_index":250,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:59",{"_index":310,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:62",{"_index":238,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:69",{"_index":309,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["repository.service.ts:76",{"_index":248,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repository.service.ts:93",{"_index":260,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["repres",{"_index":8,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["requir",{"_index":449,"title":{},"body":{"index.html":{}}}],["reset",{"_index":512,"title":{},"body":{"overview.html":{}}}],["respons",{"_index":24,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["rest",{"_index":53,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"miscellaneous/enumerations.html":{}}}],["restapirepositoryservic",{"_index":352,"title":{"injectables/RestApiRepositoryService.html":{}},"body":{"injectables/RestApiRepositoryService.html":{},"coverage.html":{}}}],["result",{"_index":54,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result[attr.nam",{"_index":125,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":26,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["root",{"_index":483,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":264,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":266,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["save",{"_index":459,"title":{},"body":{"index.html":{}}}],["savedata",{"_index":234,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["savedata(data",{"_index":247,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["sdkdb",{"_index":229,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["serial",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["serializednam",{"_index":59,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{}}}],["servic",{"_index":41,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"modules/NgxDataContextModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servicefactori",{"_index":143,"title":{},"body":{"injectables/DataContext.html":{}}}],["services/datacontext.servic",{"_index":337,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["services/firebas",{"_index":335,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["services/firestor",{"_index":336,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["services/repositori",{"_index":338,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["set(entitytosav",{"_index":317,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["similar",{"_index":489,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":494,"title":{},"body":{"index.html":{}}}],["slightli",{"_index":481,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"modules/NgxDataContextModule.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["specif",{"_index":45,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["start",{"_index":439,"title":{"index.html":{}},"body":{}}],["statement",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":342,"title":{},"body":{"modules/NgxDataContextModule.html":{}}}],["store",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["subject",{"_index":263,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["subject.asobserv",{"_index":300,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["subject.complet",{"_index":297,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["subject.error(err",{"_index":299,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["subject.next(v",{"_index":296,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["switch",{"_index":194,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["symbol('attributemetadata",{"_index":63,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":468,"title":{},"body":{"index.html":{}}}],["systemj",{"_index":460,"title":{},"body":{"index.html":{}}}],["t",{"_index":255,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{}}}],["tabl",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":67,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"interfaces/EntityAttribute.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["target.attribut",{"_index":70,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{}}}],["target.attributes.push",{"_index":74,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"interfaces/EntityAttribute.html":{}}}],["target.deserialize(data",{"_index":259,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["target.deserialize(item",{"_index":256,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["target.hasownproperty(attr.options.serializednam",{"_index":130,"title":{},"body":{"classes/BaseEntity.html":{}}}],["target.id",{"_index":127,"title":{},"body":{"classes/BaseEntity.html":{}}}],["target[attr.options.serializednam",{"_index":132,"title":{},"body":{"classes/BaseEntity.html":{}}}],["targetvalu",{"_index":131,"title":{},"body":{"classes/BaseEntity.html":{}}}],["tell",{"_index":467,"title":{},"body":{"index.html":{}}}],["test",{"_index":452,"title":{},"body":{"index.html":{}}}],["this.afs.collection(this.collectionnam",{"_index":314,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["this.afs.collection(this.entity.entitynam",{"_index":320,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["this.afs.createid",{"_index":315,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["this.afs.doc(`${this.entity.entityname}/${id",{"_index":313,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["this.angularfir",{"_index":270,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["this.angularfire.list(`${entity.entityname}`).remove(entity.id",{"_index":281,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["this.attribut",{"_index":122,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.attributes.foreach((attr",{"_index":123,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.collectionnam",{"_index":311,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["this.datasourc",{"_index":151,"title":{},"body":{"injectables/DataContext.html":{}}}],["this.datasources.foreach(datasourc",{"_index":152,"title":{},"body":{"injectables/DataContext.html":{}}}],["this.deserializeentity((thi",{"_index":134,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.entitynam",{"_index":120,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.fb",{"_index":199,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["this.fbdb",{"_index":198,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["this.fbstor",{"_index":203,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["this.http",{"_index":206,"title":{},"body":{"injectables/DataServiceFactory.html":{}}}],["this.id",{"_index":126,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{}}}],["this.isdate(targetvalu",{"_index":135,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.itemsref",{"_index":268,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["this.savedata(datatosav",{"_index":293,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["this.sdkdb",{"_index":271,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["this.sdkdb.child(entity.entityname).push().key",{"_index":289,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["this.sdkdb.update(data).then",{"_index":294,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["this.servicefactory.cr",{"_index":160,"title":{},"body":{"injectables/DataContext.html":{}}}],["this.servicefactory.createcustom",{"_index":165,"title":{},"body":{"injectables/DataContext.html":{}}}],["this['nam",{"_index":221,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["throw",{"_index":278,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["top",{"_index":484,"title":{},"body":{"index.html":{}}}],["torecord",{"_index":210,"title":{},"body":{"classes/FirebaseEntity.html":{}}}],["track",{"_index":286,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["true",{"_index":323,"title":{},"body":{"injectables/FirestoreRepository.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"interfaces/CustomServiceConfig.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/DataSource.html":{},"interfaces/EntityAttribute.html":{},"interfaces/EntityServiceConfig.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"classes/FirebaseEntity.html":{}}}],["umd",{"_index":464,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":71,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"classes/BaseEntity.html":{},"injectables/DataContext.html":{},"injectables/DataServiceFactory.html":{},"interfaces/EntityAttribute.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":504,"title":{},"body":{"index.html":{}}}],["up",{"_index":487,"title":{},"body":{"index.html":{}}}],["updat",{"_index":235,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["update(ent",{"_index":249,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"interfaces/Repository.html":{},"injectables/RestApiRepositoryService.html":{}}}],["update(entity.id",{"_index":283,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["url",{"_index":16,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{}}}],["us",{"_index":23,"title":{},"body":{"interfaces/ApiConfig.html":{},"interfaces/CustomServiceConfig.html":{},"interfaces/DataSource.html":{},"interfaces/EntityServiceConfig.html":{},"index.html":{}}}],["usag",{"_index":497,"title":{},"body":{"index.html":{}}}],["val",{"_index":295,"title":{},"body":{"injectables/FirebaseRepository.html":{}}}],["valu",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"classes/FirebaseEntity.html":{},"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{},"miscellaneous/variables.html":{}}}],["valuechang",{"_index":274,"title":{},"body":{"injectables/FirebaseRepository.html":{},"injectables/FirestoreRepository.html":{}}}],["variabl",{"_index":366,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":456,"title":{},"body":{"index.html":{}}}],["view",{"_index":445,"title":{},"body":{"index.html":{}}}],["void",{"_index":69,"title":{},"body":{"interfaces/AttributeDecoratorOptions.html":{},"injectables/DataContext.html":{},"interfaces/EntityAttribute.html":{}}}],["ye",{"_index":180,"title":{},"body":{"injectables/DataServiceFactory.html":{},"injectables/FirebaseRepository.html":{},"miscellaneous/functions.html":{}}}],["zone.j",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":511,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiConfig.html":{"url":"interfaces/ApiConfig.html","title":"interface - ApiConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/models/datasource.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the configuration for an api.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collectionAttribute\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionAttribute\n                                    \n                                \n                                \n                                    \n                                        collectionAttribute:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Attribute where the collection will be located.\nThis is useful when the response a get() call that\nreturns a collection in a certain attribute.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\n\nimport { BaseEntity } from './entity.model';\n\n/**\n * Interface representing the configuration for an api.\n *\n */\nexport interface ApiConfig {\n  url: string;\n  /**\n   * Attribute where the collection will be located.\n   * This is useful when the response a get() call that\n   * returns a collection in a certain attribute.\n   * @example 'items' when response is like {items:[]}\n   */\n  collectionAttribute?: string;\n  headers?: HttpHeaders;\n}\n\nexport interface DataSource {\n  config?: ApiConfig;\n  type: DataSourceType;\n  entities?: Array | Array;\n  services?: Array;\n}\n\nexport interface CustomServiceConfig {\n  name: string;\n  entity: BaseEntity;\n  service: any;\n}\n/**\n * Configuration for services linked to specific entity.\n * @export\n */\nexport interface EntityServiceConfig {\n  /**\n   * Renames the property used in datacontext for\n   * the current entity service.\n   */\n  name?: string;\n\n  entity: BaseEntity;\n}\n\nexport enum DataSourceType {\n  firebase,\n  firestore,\n  rest\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AttributeDecoratorOptions.html":{"url":"interfaces/AttributeDecoratorOptions.html","title":"interface - AttributeDecoratorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AttributeDecoratorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        isEntity\n                                \n                                \n                                            Optional\n                                        serializedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isEntity\n                                    \n                                \n                                \n                                    \n                                        isEntity:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializedName\n                                    \n                                \n                                \n                                    \n                                        serializedName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ATTRIBUTE_METADATA = Symbol('AttributeMetadata');\n\nexport interface EntityAttribute {\n  name: string;\n  options: AttributeDecoratorOptions;\n}\n\nexport interface AttributeDecoratorOptions {\n  serializedName?: string;\n  isEntity?: boolean;\n}\n\nexport function Attribute(\n  options: AttributeDecoratorOptions = {}\n): PropertyDecorator {\n  return (target: any, attributeKey: any): void => {\n    if (target.attributes === undefined)\n      target.attributes = new Array();\n\n    if (options.serializedName === undefined)\n      options.serializedName = attributeKey;\n\n    target.attributes.push({\n      name: attributeKey,\n      options\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/models/entity.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                    Private\n                                deserializeEntity\n                            \n                            \n                                entityName\n                            \n                            \n                                id\n                            \n                            \n                                    Private\n                                isDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isNew\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attributes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attributes:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deserializeEntity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deserializeEntity:     \n\n                    \n                \n                    \n                        \n                            Default value : (entity: any, data: any): any => {\n    if (entity === undefined || data === undefined) return undefined;\n\n    let result;\n    if (Array.isArray(data)) {\n      const collection = [];\n      for (const d in data)\n        if (d !== undefined) {\n          const item = typeof data === 'object' ? data[d] : data;\n          const deserialize = entity.deserialize(item);\n          collection.push(deserialize);\n        }\n\n      result = collection;\n    } else if (!_.isEmpty(entity))\n      result =\n        entity.deserialize !== undefined ? entity.deserialize(data) : data;\n\n    return result;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entityName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entityName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDate:     \n\n                    \n                \n                    \n                        \n                            Default value : (field: any): boolean => {\n    return (\n      typeof field === 'string' &&\n      field.indexOf('Z') !== -1 &&\n      !isNaN(Date.parse(field))\n    );\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:74\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeserialize(target: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     BaseEntity\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \nserialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isNew\n                    \n                \n\n                \n                    \n                        getisNew()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-datacontext/src/lib/models/entity.model.ts:49\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as _ from 'lodash';\n\nimport { EntityAttribute } from '../decorators/attribute.decorator';\n\nexport class BaseEntity {\n  attributes: Array;\n  entityName: string;\n  id: any;\n\n  constructor() {\n    this.entityName = (this as any).$$name;\n  }\n\n  serialize(): any {\n    if (this.attributes === undefined) return undefined;\n    const result: any = {};\n    this.attributes.forEach((attr: EntityAttribute) => {\n      if ((this as any)[attr.name] !== undefined)\n        result[attr.name] = (this as any)[attr.name];\n    });\n\n    return result;\n  }\n\n  deserialize(target: any): BaseEntity {\n\n    if (this.attributes === undefined) return this;\n\n    this.id = target.id;\n\n    this.attributes.forEach((attr: EntityAttribute) => {\n      if (\n        attr.options === undefined ||\n        attr.options.serializedName === undefined ||\n        !target.hasOwnProperty(attr.options.serializedName)\n      )\n        return this;\n\n      const targetValue = target[attr.options.serializedName];\n\n      (this as any)[attr.name] = attr.options.isEntity\n        ? this.deserializeEntity((this as any)[attr.name], targetValue)\n        : this.isDate(targetValue) ? new Date(targetValue) : targetValue;\n    });\n\n    return this;\n  }\n\n  get isNew(): boolean {\n    return this.id === undefined;\n  }\n\n  private deserializeEntity = (entity: any, data: any): any => {\n    if (entity === undefined || data === undefined) return undefined;\n\n    let result;\n    if (Array.isArray(data)) {\n      const collection = [];\n      for (const d in data)\n        if (d !== undefined) {\n          const item = typeof data === 'object' ? data[d] : data;\n          const deserialize = entity.deserialize(item);\n          collection.push(deserialize);\n        }\n\n      result = collection;\n    } else if (!_.isEmpty(entity))\n      result =\n        entity.deserialize !== undefined ? entity.deserialize(data) : data;\n\n    return result;\n  }\n\n  private isDate = (field: any): boolean => {\n    return (\n      typeof field === 'string' &&\n      field.indexOf('Z') !== -1 &&\n      !isNaN(Date.parse(field))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomServiceConfig.html":{"url":"interfaces/CustomServiceConfig.html","title":"interface - CustomServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/models/datasource.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                                \n                                        name\n                                \n                                \n                                        service\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     BaseEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BaseEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                    \n                                \n                                \n                                    \n                                        service:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\n\nimport { BaseEntity } from './entity.model';\n\n/**\n * Interface representing the configuration for an api.\n *\n */\nexport interface ApiConfig {\n  url: string;\n  /**\n   * Attribute where the collection will be located.\n   * This is useful when the response a get() call that\n   * returns a collection in a certain attribute.\n   * @example 'items' when response is like {items:[]}\n   */\n  collectionAttribute?: string;\n  headers?: HttpHeaders;\n}\n\nexport interface DataSource {\n  config?: ApiConfig;\n  type: DataSourceType;\n  entities?: Array | Array;\n  services?: Array;\n}\n\nexport interface CustomServiceConfig {\n  name: string;\n  entity: BaseEntity;\n  service: any;\n}\n/**\n * Configuration for services linked to specific entity.\n * @export\n */\nexport interface EntityServiceConfig {\n  /**\n   * Renames the property used in datacontext for\n   * the current entity service.\n   */\n  name?: string;\n\n  entity: BaseEntity;\n}\n\nexport enum DataSourceType {\n  firebase,\n  firestore,\n  rest\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataContext.html":{"url":"injectables/DataContext.html","title":"injectable - DataContext","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/services/datacontext.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datasources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceFactory: DataServiceFactory)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-datacontext/src/lib/services/datacontext.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceFactory\n                                                  \n                                                        \n                                                                    DataServiceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/datacontext.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datasources\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasources:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/datacontext.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { DataServiceFactory } from './repository-factory.service';\nimport { BaseEntity } from '../models/entity.model';\nimport { CustomServiceConfig, DataSource } from '../models/datasource.model';\n\n@Injectable()\nexport class DataContext {\n  datasources: Array;\n\n  constructor(private serviceFactory: DataServiceFactory) { }\n\n  initialize(): void {\n    if (this.datasources !== undefined)\n      this.datasources.forEach(datasource => {\n        if (\n          datasource.entities !== undefined &&\n          Array.isArray(datasource.entities)\n        )\n          for (const item of datasource.entities) {\n            let entity: BaseEntity;\n            let target: string;\n\n            if (item instanceof BaseEntity) {\n              entity = item as BaseEntity;\n              target = (entity as any)['$$name'];\n            } else {\n              entity = item.entity;\n              target =\n                item.name !== undefined ? item.name : (entity as any)['$$name'];\n            }\n\n            (this as any)[target] = this.serviceFactory.create(\n              entity,\n              datasource\n            );\n          }\n\n        if (\n          datasource.services !== undefined &&\n          Array.isArray(datasource.services)\n        )\n          datasource.services.forEach(\n            (config: CustomServiceConfig) => {\n              (this as any)[config.name] = this.serviceFactory.createCustom(\n                datasource\n              );\n            }\n          );\n      });\n  }\n}\n\n//                 const entity = (item typeof EntityServiceConfig)\n//                 ? item.entity\n//                 : item;\n//         const target = (item typeof EntityServiceConfig && item.name !== undefined)\n//         ? (item.entity as any)['$$name']\n//         : item.name;\n\n// (this as any)[target] = this.serviceFactory.create(\n//     entity,\n//     datasource\n// );\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataServiceFactory.html":{"url":"injectables/DataServiceFactory.html","title":"injectable - DataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/services/repository-factory.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createCustom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fbDb?: AngularFireDatabase, fb?: FirebaseApp, fbStore?: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-datacontext/src/lib/services/repository-factory.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbDb\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FirebaseApp\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbStore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(entity: BaseEntity, datasource: DataSource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/repository-factory.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    BaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        datasource\n                                                        \n                                                                    DataSource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Repository | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCustom\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCustom(datasource: DataSource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/repository-factory.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasource\n                                                        \n                                                                    DataSource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FirebaseApp } from '@angular/fire';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { FirebaseRepository } from './firebase-repository.service';\nimport { BaseEntity } from '../models/entity.model';\nimport { DataSource, DataSourceType } from '../models/datasource.model';\nimport { Repository } from '../models/repository.model';\nimport { FirebaseEntity } from '../models/firebase-entity.model';\nimport { FirestoreRepository } from './firestore-repository.service';\n\n@Injectable()\nexport class DataServiceFactory {\n  constructor(\n    private http: HttpClient,\n    private fbDb?: AngularFireDatabase,\n    private fb?: FirebaseApp,\n    private fbStore?: AngularFirestore\n  ) { }\n\n  create(\n    entity: BaseEntity,\n    datasource: DataSource\n  ): Repository | undefined {\n    let service;\n    switch (datasource.type) {\n      case DataSourceType.firebase:\n        service = new FirebaseRepository(\n          entity as FirebaseEntity,\n          this.fbDb,\n          this.fb\n        );\n        break;\n      case DataSourceType.rest:\n        break;\n      case DataSourceType.firestore:\n        service = new FirestoreRepository(\n          entity as FirebaseEntity,\n          this.fbStore\n        );\n        break;\n      default:\n        break;\n    }\n\n    return service;\n  }\n\n  createCustom(datasource: DataSource): any {\n    // return new datasource.service(datasource.entity, datasource.apiConfig, this.http);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/models/datasource.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                            Optional\n                                        entities\n                                \n                                \n                                            Optional\n                                        services\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     ApiConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     Array | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        services\n                                    \n                                \n                                \n                                    \n                                        services:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     DataSourceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DataSourceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\n\nimport { BaseEntity } from './entity.model';\n\n/**\n * Interface representing the configuration for an api.\n *\n */\nexport interface ApiConfig {\n  url: string;\n  /**\n   * Attribute where the collection will be located.\n   * This is useful when the response a get() call that\n   * returns a collection in a certain attribute.\n   * @example 'items' when response is like {items:[]}\n   */\n  collectionAttribute?: string;\n  headers?: HttpHeaders;\n}\n\nexport interface DataSource {\n  config?: ApiConfig;\n  type: DataSourceType;\n  entities?: Array | Array;\n  services?: Array;\n}\n\nexport interface CustomServiceConfig {\n  name: string;\n  entity: BaseEntity;\n  service: any;\n}\n/**\n * Configuration for services linked to specific entity.\n * @export\n */\nexport interface EntityServiceConfig {\n  /**\n   * Renames the property used in datacontext for\n   * the current entity service.\n   */\n  name?: string;\n\n  entity: BaseEntity;\n}\n\nexport enum DataSourceType {\n  firebase,\n  firestore,\n  rest\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityAttribute.html":{"url":"interfaces/EntityAttribute.html","title":"interface - EntityAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     AttributeDecoratorOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AttributeDecoratorOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ATTRIBUTE_METADATA = Symbol('AttributeMetadata');\n\nexport interface EntityAttribute {\n  name: string;\n  options: AttributeDecoratorOptions;\n}\n\nexport interface AttributeDecoratorOptions {\n  serializedName?: string;\n  isEntity?: boolean;\n}\n\nexport function Attribute(\n  options: AttributeDecoratorOptions = {}\n): PropertyDecorator {\n  return (target: any, attributeKey: any): void => {\n    if (target.attributes === undefined)\n      target.attributes = new Array();\n\n    if (options.serializedName === undefined)\n      options.serializedName = attributeKey;\n\n    target.attributes.push({\n      name: attributeKey,\n      options\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityServiceConfig.html":{"url":"interfaces/EntityServiceConfig.html","title":"interface - EntityServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/models/datasource.model.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for services linked to specific entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     BaseEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BaseEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Renames the property used in datacontext for\nthe current entity service.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\n\nimport { BaseEntity } from './entity.model';\n\n/**\n * Interface representing the configuration for an api.\n *\n */\nexport interface ApiConfig {\n  url: string;\n  /**\n   * Attribute where the collection will be located.\n   * This is useful when the response a get() call that\n   * returns a collection in a certain attribute.\n   * @example 'items' when response is like {items:[]}\n   */\n  collectionAttribute?: string;\n  headers?: HttpHeaders;\n}\n\nexport interface DataSource {\n  config?: ApiConfig;\n  type: DataSourceType;\n  entities?: Array | Array;\n  services?: Array;\n}\n\nexport interface CustomServiceConfig {\n  name: string;\n  entity: BaseEntity;\n  service: any;\n}\n/**\n * Configuration for services linked to specific entity.\n * @export\n */\nexport interface EntityServiceConfig {\n  /**\n   * Renames the property used in datacontext for\n   * the current entity service.\n   */\n  name?: string;\n\n  entity: BaseEntity;\n}\n\nexport enum DataSourceType {\n  firebase,\n  firestore,\n  rest\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseEntity.html":{"url":"classes/FirebaseEntity.html","title":"class - FirebaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/models/firebase-entity.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                attributes\n                            \n                            \n                                    Private\n                                deserializeEntity\n                            \n                            \n                                entityName\n                            \n                            \n                                id\n                            \n                            \n                                    Private\n                                isDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toRecord\n                            \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/firebase-entity.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attributes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attributes:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseEntity:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deserializeEntity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deserializeEntity:     \n\n                    \n                \n                    \n                        \n                            Default value : (entity: any, data: any): any => {\n    if (entity === undefined || data === undefined) return undefined;\n\n    let result;\n    if (Array.isArray(data)) {\n      const collection = [];\n      for (const d in data)\n        if (d !== undefined) {\n          const item = typeof data === 'object' ? data[d] : data;\n          const deserialize = entity.deserialize(item);\n          collection.push(deserialize);\n        }\n\n      result = collection;\n    } else if (!_.isEmpty(entity))\n      result =\n        entity.deserialize !== undefined ? entity.deserialize(data) : data;\n\n    return result;\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseEntity:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entityName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entityName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseEntity:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseEntity:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDate:     \n\n                    \n                \n                    \n                        \n                            Default value : (field: any): boolean => {\n    return (\n      typeof field === 'string' &&\n      field.indexOf('Z') !== -1 &&\n      !isNaN(Date.parse(field))\n    );\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseEntity:74\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toRecord\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toRecord()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/firebase-entity.model.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeserialize(target: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseEntity:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     BaseEntity\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \nserialize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseEntity:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from './entity.model';\n\nexport class FirebaseEntity extends BaseEntity {\n  name: string;\n\n  private toRecord(): any {\n    return {\n      id: this.id,\n      name: this['name']\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseRepository.html":{"url":"injectables/FirebaseRepository.html","title":"injectable - FirebaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                angularfire\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Private\n                                handleCollectionResponse\n                            \n                            \n                                    Private\n                                handleEntityResponse\n                            \n                            \n                                itemsRef\n                            \n                            \n                                sdkDb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                remove\n                            \n                            \n                                    Private\n                                saveData\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: FirebaseEntity, angularfire?: AngularFireDatabase, fb?: FirebaseApp)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angularfire\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FirebaseApp\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(entity: FirebaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            find\n                            \n                            \n                        \n                    \n                \n                \n                    \nfind()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(entity: FirebaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveData(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(entity: FirebaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            angularfire\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        angularfire:     AngularFireDatabase\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entity:     FirebaseEntity\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleCollectionResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handleCollectionResponse:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: any): Array => {\n    let result: Array = [];\n    if (Array.isArray(data)) {\n      const collection: Array = [];\n\n      data.forEach((item: any) => {\n        const target = _.cloneDeep(this.entity) as T;\n        target.deserialize(item);\n        collection.push(target);\n      });\n\n      result = collection;\n    }\n\n    return result;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleEntityResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handleEntityResponse:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: any): T => {\n    let result: T;\n\n    const target = _.cloneDeep(this.entity) as T;\n    target.deserialize(data);\n    result = target;\n\n    return result;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsRef:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sdkDb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdkDb:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseApp } from '@angular/fire';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database'\nimport * as _ from 'lodash';\nimport { Observable, Subject, of} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FirebaseEntity } from '../models/firebase-entity.model';\nimport { Repository } from '../models/repository.model';\n\n@Injectable()\nexport class FirebaseRepository\n  implements Repository {\n  sdkDb: any;\n  angularfire: AngularFireDatabase;\n  itemsRef: AngularFireList;\n\n  constructor(\n    public entity: FirebaseEntity,\n    angularfire?: AngularFireDatabase,\n    fb?: FirebaseApp\n  ) {\n    if (angularfire !== undefined) {\n      this.itemsRef = angularfire.list(`${this.entity.entityName}`);\n      this.angularfire = angularfire;\n    }\n\n    if (fb !== undefined) this.sdkDb = fb.database().ref('/');\n  }\n\n  getById(id: string): Observable {\n    return this.angularfire\n      .object(`${this.entity.entityName}/${id}`)\n      .valueChanges()\n      .pipe(map(this.handleEntityResponse));\n  }\n\n  getAll(): Observable> {\n    return this.angularfire\n      .list(this.entity.entityName)\n      .valueChanges()\n      .pipe(map(this.handleCollectionResponse));\n  }\n\n  find(): Observable> {\n    throw new Error('Method not implemented.');\n  }\n\n  remove(entity: FirebaseEntity): Promise {\n    if (!entity) return Promise.resolve(undefined);\n\n    return this.angularfire.list(`${entity.entityName}`).remove(entity.id);\n  }\n\n  update(entity: FirebaseEntity): Promise {\n    if (!entity) return Promise.resolve(undefined);\n\n    return this.angularfire\n      .list(entity.entityName)\n      .update(entity.id, { ...entity.serialize() });\n  }\n\n  create(entity: FirebaseEntity): Observable {\n    if (!entity) return of();\n    // to keep track of ids\n\n    const dataToSave: any = {};\n    const newKey = this.sdkDb.child(entity.entityName).push().key;\n    const entityToSave = { ...entity.serialize() };\n    entityToSave.id = newKey;\n\n    dataToSave[`${entity.entityName}/${newKey}`] = entityToSave;\n\n    return this.saveData(dataToSave);\n  }\n\n  private saveData(data: any): Observable {\n    const subject = new Subject();\n\n    this.sdkDb.update(data).then(\n      (val: any) => {\n        subject.next(val);\n        subject.complete();\n      },\n      (err: any) => {\n        subject.error(err);\n        subject.complete();\n      }\n    );\n\n    return subject.asObservable();\n  }\n\n  private handleEntityResponse = (data: any): T => {\n    let result: T;\n\n    const target = _.cloneDeep(this.entity) as T;\n    target.deserialize(data);\n    result = target;\n\n    return result;\n  }\n\n  private handleCollectionResponse = (data: any): Array => {\n    let result: Array = [];\n    if (Array.isArray(data)) {\n      const collection: Array = [];\n\n      data.forEach((item: any) => {\n        const target = _.cloneDeep(this.entity) as T;\n        target.deserialize(item);\n        collection.push(target);\n      });\n\n      result = collection;\n    }\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirestoreRepository.html":{"url":"injectables/FirestoreRepository.html","title":"injectable - FirestoreRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirestoreRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionName\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Private\n                                handleCollectionResponse\n                            \n                            \n                                    Private\n                                handleEntityResponse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: FirebaseEntity, afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(entity: FirebaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            find\n                            \n                            \n                        \n                    \n                \n                \n                    \nfind()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(entity: FirebaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(entity: FirebaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    FirebaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collectionName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entity:     FirebaseEntity\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleCollectionResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handleCollectionResponse:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: any): Array => {\n    let result: Array = [];\n    if (Array.isArray(data)) {\n      const collection: Array = [];\n\n      data.forEach((item: any) => {\n        const target = _.cloneDeep(this.entity) as T;\n        target.deserialize(item);\n        collection.push(target);\n      });\n\n      result = collection;\n    }\n\n    return result;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleEntityResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handleEntityResponse:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: any): T => {\n    let result: T;\n\n    const target = _.cloneDeep(this.entity) as T;\n    target.deserialize(data);\n    result = target;\n\n    return result;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts:59\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport * as _ from 'lodash';\nimport { Observable,  of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FirebaseEntity } from '../models/firebase-entity.model';\nimport { Repository } from '../models/repository.model';\n\n@Injectable()\nexport class FirestoreRepository\n  implements Repository {\n  collectionName: string;\n  constructor(\n    public entity: FirebaseEntity,\n    private afs: AngularFirestore\n  ) {\n    this.collectionName = entity.entityName;\n  }\n\n  getById(id: string): Observable {\n\n    return this.afs.doc(`${this.entity.entityName}/${id}`)\n      .valueChanges()\n      .pipe(map(this.handleEntityResponse));\n  }\n\n  getAll(): Observable> {\n\n    return this.afs.collection(this.collectionName)\n      .valueChanges();\n  }\n\n  find(): Observable> {\n    throw new Error('Method not implemented.');\n  }\n\n  create(entity: FirebaseEntity): Observable {\n    if (!entity) return of();\n\n    const entityToSave = { ...entity.serialize() };\n    entityToSave.id = this.afs.createId();\n    this.afs.collection(this.collectionName)\n      .doc(entityToSave.id)\n      .set(entityToSave);\n  }\n  remove(entity: FirebaseEntity): Promise {\n    if (!entity) return Promise.resolve(undefined);\n\n    return this.afs.collection(this.collectionName)\n      .doc(entity.id)\n      .delete();\n  }\n\n  update(entity: FirebaseEntity): Promise {\n    return this.afs.collection(this.entity.entityName)\n      .doc(entity.id).set(entity, { merge: true });\n  }\n\n  private handleEntityResponse = (data: any): T => {\n    let result: T;\n\n    const target = _.cloneDeep(this.entity) as T;\n    target.deserialize(data);\n    result = target;\n\n    return result;\n  }\n\n  private handleCollectionResponse = (data: any): Array => {\n    let result: Array = [];\n    if (Array.isArray(data)) {\n      const collection: Array = [];\n\n      data.forEach((item: any) => {\n        const target = _.cloneDeep(this.entity) as T;\n        target.deserialize(item);\n        collection.push(target);\n      });\n\n      result = collection;\n    }\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxDataContextModule.html":{"url":"modules/NgxDataContextModule.html","title":"module - NgxDataContextModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxDataContextModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/ngx-datacontext.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { FirebaseRepository } from './services/firebase-repository.service';\nimport { FirestoreRepository } from './services/firestore-repository.service';\nimport { DataContext } from './services/datacontext.service';\nimport { DataServiceFactory } from './services/repository-factory.service';\n\n// Entities\nexport { BaseEntity } from './models/entity.model';\nexport { DataSource, DataSourceType } from './models/datasource.model';\nexport { FirebaseEntity } from './models/firebase-entity.model';\n\n// Decorators\nexport { Entity } from './decorators/entity.decorator';\nexport { Attribute } from './decorators/attribute.decorator';\n\n// Services\nexport { FirebaseRepository } from './services/firebase-repository.service';\nexport { FirestoreRepository } from './services/firestore-repository.service';\nexport { DataContext } from './services/datacontext.service';\nexport { DataServiceFactory } from './services/repository-factory.service';\n\nconst SERVICES = [\n  FirebaseRepository,\n  FirestoreRepository,\n  DataContext,\n  DataServiceFactory\n];\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AngularFireDatabaseModule,\n    AngularFirestoreModule,\n    HttpClientModule],\n  exports: []\n})\nexport class NgxDataContextModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxDataContextModule,\n      providers: [...SERVICES]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Repository.html":{"url":"interfaces/Repository.html","title":"interface - Repository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Repository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/models/repository.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    find\n                                \n                                \n                                    getAll\n                                \n                                \n                                    getById\n                                \n                                \n                                    remove\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(entity: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/repository.model.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            find\n                            \n                            \n                        \n                    \n                \n                \n                    \nfind()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/repository.model.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/repository.model.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/repository.model.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(entity: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/repository.model.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(entity: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/models/repository.model.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { BaseEntity } from './entity.model';\n\nexport interface Repository {\n  getById(id: string): Observable;\n\n  getAll(): Observable>;\n\n  find(): Observable>;\n\n  create(entity: T): Observable;\n\n  remove(entity: T): Promise;\n\n  update(entity: T): Promise;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestApiRepositoryService.html":{"url":"injectables/RestApiRepositoryService.html","title":"injectable - RestApiRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestApiRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(entity: BaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    BaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            find\n                            \n                            \n                        \n                    \n                \n                \n                    \nfind()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(entity: BaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    BaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(entity: BaseEntity)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    BaseEntity\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { BaseEntity } from '../models/entity.model';\nimport { Repository } from '../models/repository.model';\n\n@Injectable()\nexport class RestApiRepositoryService\n  implements Repository {\n  getById(id: string): Observable {\n    throw new Error('Method not implemented.');\n  }\n  getAll(): Observable> {\n    throw new Error('Method not implemented.');\n  }\n  find(): Observable> {\n    throw new Error('Method not implemented.');\n  }\n  create(entity: BaseEntity): Observable {\n    throw new Error('Method not implemented.');\n  }\n  remove(entity: BaseEntity): Promise {\n    throw new Error('Method not implemented.');\n  }\n  update(entity: BaseEntity): Promise {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n            \n            \n                interface\n            \n            \n                AttributeDecoratorOptions\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n            \n            \n                interface\n            \n            \n                EntityAttribute\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n            \n            \n                function\n            \n            \n                Attribute\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n            \n            \n                variable\n            \n            \n                ATTRIBUTE_METADATA\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/decorators/entity-property.decorator.ts\n            \n            \n                function\n            \n            \n                EntityProperty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/decorators/entity.decorator.ts\n            \n            \n                function\n            \n            \n                Entity\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/models/datasource.model.ts\n            \n            \n                interface\n            \n            \n                ApiConfig\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/models/datasource.model.ts\n            \n            \n                interface\n            \n            \n                CustomServiceConfig\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/models/datasource.model.ts\n            \n            \n                interface\n            \n            \n                DataSource\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/models/datasource.model.ts\n            \n            \n                interface\n            \n            \n                EntityServiceConfig\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/models/entity.model.ts\n            \n            \n                class\n            \n            \n                BaseEntity\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/models/firebase-entity.model.ts\n            \n            \n                class\n            \n            \n                FirebaseEntity\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/models/repository.model.ts\n            \n            \n                interface\n            \n            \n                Repository\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/ngx-datacontext.module.ts\n            \n            \n                variable\n            \n            \n                SERVICES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/services/datacontext.service.ts\n            \n            \n                injectable\n            \n            \n                DataContext\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/services/firebase-repository.service.ts\n            \n            \n                injectable\n            \n            \n                FirebaseRepository\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/services/firestore-repository.service.ts\n            \n            \n                injectable\n            \n            \n                FirestoreRepository\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/services/repository-factory.service.ts\n            \n            \n                injectable\n            \n            \n                DataServiceFactory\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-datacontext/src/lib/services/rest-api-repository.service.ts\n            \n            \n                injectable\n            \n            \n                RestApiRepositoryService\n            \n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/fire : ^5.0.2\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ng-bootstrap/ng-bootstrap : ^3.3.1\n        \n            @ngrx/effects : 6.1.0\n        \n            @ngrx/router-store : 6.1.0\n        \n            @ngrx/store : 6.1.0\n        \n            @nrwl/nx : 6.4.0\n        \n            bootstrap : ^4.1.3\n        \n            commitplease : ^3.2.0\n        \n            core-js : ^2.5.4\n        \n            faker : ^4.1.0\n        \n            firebase : ^5.5.5\n        \n            font-awesome : ^4.7.0\n        \n            include-media : ^1.4.9\n        \n            lodash : ^4.17.11\n        \n            ngx-highlightjs : ^2.1.1\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataSourceType   (libs/.../datasource.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-datacontext/src/lib/models/datasource.model.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSourceType\n                    \n                \n                        \n                            \n                                 firebase\n                            \n                        \n                        \n                            \n                                 firestore\n                            \n                        \n                        \n                            \n                                 rest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attribute   (libs/.../attribute.decorator.ts)\n                        \n                        \n                            Entity   (libs/.../entity.decorator.ts)\n                        \n                        \n                            EntityProperty   (libs/.../entity-property.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Attribute\n                            \n                            \n                        \n                    \n                \n                \n                    \nAttribute(options: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    libs/ngx-datacontext/src/lib/decorators/entity.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Entity\n                            \n                            \n                        \n                    \n                \n                \n                    \nEntity(name: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    libs/ngx-datacontext/src/lib/decorators/entity-property.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EntityProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nEntityProperty(entity?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nngx-datacontext - Data context service for Angular applications to easily create data services and link them to entities.\n,\n\n\n\n\n\nDemo\nView all the directives in action at https://alfredoperez.github.io/ngx-datacontext\nDependencies\n\nAngular (requires Angular 2 or higher, tested with 2.0.0)\n\nInstallation\nInstall above dependencies via npm. \nNow install ngx-datacontext via:\nnpm install --save ngx-datacontext\nSystemJS\n\nNote:If you are using SystemJS, you should adjust your configuration to point to the UMD bundle.\nIn your systemjs config file, map needs to tell the System loader where to look for ngx-datacontext:\n`js\nmap: {\n  'ngx-datacontext': 'node_modules/ngx-datacontext/bundles/ngx-datacontext.umd.js',\n}\n\n---\n\nOnce installed you need to import the main module:\n```js\nimport { NgxDatacontextModule } from 'ngx-datacontext';The only remaining part is to list the imported module in your application module. The exact method will be slightly\ndifferent for the root (top-level) module for which you should end up with the code similar to (notice NgxDatacontextModule .forRoot()):\nimport { NgxDatacontextModule } from 'ngx-datacontext';\n\n@NgModule({\n  declarations: [ AppComponent, ... ],\n  imports: [NgxDatacontextModule.forRoot(), ...],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Other modules in your application can simply import NgxDatacontextModule:\nimport { NgxDatacontextModule } from 'ngx-datacontext';\n\n@NgModule({\n  declarations: [OtherComponent, ...],\n  imports: [NgxDatacontextModule, ...], \n})\nexport class OtherModule {\n}Usage\nLicense\nCopyright (c) 2017 Alfredo Perez. Licensed under the MIT License (MIT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxDataContextModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ATTRIBUTE_METADATA   (libs/.../attribute.decorator.ts)\n                        \n                        \n                            SERVICES   (libs/.../ngx-datacontext.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-datacontext/src/lib/decorators/attribute.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ATTRIBUTE_METADATA\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ATTRIBUTE_METADATA:     \n\n                    \n                \n                    \n                        \n                            Default value : Symbol('AttributeMetadata')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-datacontext/src/lib/ngx-datacontext.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SERVICES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SERVICES:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  FirebaseRepository,\n  FirestoreRepository,\n  DataContext,\n  DataServiceFactory\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
